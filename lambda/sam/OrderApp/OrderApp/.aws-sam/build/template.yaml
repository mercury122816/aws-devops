AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'OrderApp Order Processing Application

  '
Parameters:
  Stage:
    Type: String
    Default: DEV
Globals:
  Function:
    Timeout: 300
Resources:
  OrderAPILogGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://shared-infra-reusable-cft-sam.s3.amazonaws.com/shared-infra-order-app.yaml
      Parameters:
        LogGroupName:
          Fn::Sub: /aws/apigateway/AccessLog-OrderAPI-${Stage}-LogGroup
  OrderAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: Order App Api
      StageName:
        Ref: Stage
      CacheClusterEnabled: true
      CacheClusterSize: '0.5'
      CanarySetting:
        PercentTraffic: 10
      Tags:
        Name: Order App ApiGateway
  OrderReceiptStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ..\..\order-receipt-orchestrator\order_receipt_orchestrator.asl.json
      Role:
        Fn::ImportValue: OrderOrchestratorRoleArn
      Tracing:
        Enabled: true
      DefinitionSubstitutions:
        REGION:
          Ref: AWS::Region
        ACCOUNT:
          Ref: AWS::AccountId
        GENERATE_RECEIPT_FUNCTION:
          Fn::GetAtt:
          - GenerateOrderReceiptFunction
          - Arn
        POST_RECEIPT_FUNCTION:
          Fn::GetAtt:
          - GetOrderReceiptCallbackFunction
          - Arn
  GetOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Events:
        GetOrder:
          Type: Api
          Properties:
            Path: /orders
            Method: get
            RestApiId:
              Ref: OrderAPI
      ImageUri: getorderfunction:nodejs12.x-v1
    Metadata:
      DockerTag: nodejs12.x-v1
      DockerContext: ./getorder
      Dockerfile: Dockerfile
  GetOrderReceiptFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Environment:
        Variables:
          EXECUTION_ARN:
            Fn::GetAtt:
            - OrderReceiptStateMachine
            - Arn
      Policies:
      - Statement:
        - Sid: StepFunctionExecutionToken
          Effect: Allow
          Action:
          - states:StartExecution
          Resource:
            Fn::GetAtt:
            - OrderReceiptStateMachine
            - Arn
      Events:
        GetOrder:
          Type: Api
          Properties:
            Path: /orders/{id}/receipt
            Method: get
            RestApiId:
              Ref: OrderAPI
      ImageUri: getorderreceiptfunction:nodejs12.x-v1
    Metadata:
      DockerTag: nodejs12.x-v1
      DockerContext: ./getorderreceipt
      Dockerfile: Dockerfile
  GenerateOrderReceiptFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri: generateorderreceiptfunction:nodejs12.x-v1
    Metadata:
      DockerTag: nodejs12.x-v1
      DockerContext: ./generateorderreceipt
      Dockerfile: Dockerfile
  GetOrderReceiptCallbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Policies:
      - Statement:
        - Sid: ApiGatewayGetConnection
          Effect: Allow
          Action:
          - apigateway:*
          Resource: '*'
        - Sid: ApiGatewayPostToConnection
          Effect: Allow
          Action:
          - execute-api:ManageConnections
          Resource: '*'
        - Sid: DynamoDBGet
          Effect: Allow
          Action:
          - dynamodb:*
          Resource: '*'
      ImageUri: getorderreceiptcallbackfunction:nodejs12.x-v1
    Metadata:
      DockerTag: nodejs12.x-v1
      DockerContext: ./getorderreceiptcallback
      Dockerfile: Dockerfile
  RegisterReceiptFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Policies:
      - Statement:
        - Sid: ApiGatewayPostToConnection
          Effect: Allow
          Action:
          - apigateway:*
          Resource: '*'
        - Sid: DynamoDBGet
          Effect: Allow
          Action:
          - dynamodb:*
          Resource: '*'
      ImageUri: registerreceiptfunction:nodejs12.x-v1
    Metadata:
      DockerTag: nodejs12.x-v1
      DockerContext: ./registerorderreceipt
      Dockerfile: Dockerfile
Outputs:
  GetOrderApi:
    Description: API Gateway endpoint URL for GetOrder function
    Value:
      Fn::Sub: https://${OrderAPI}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/order/
  GetOrderFunction:
    Description: Get Order Lambda Function ARN
    Value:
      Fn::GetAtt:
      - GetOrderFunction
      - Arn
  GetOrderFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - GetOrderFunctionRole
      - Arn
  GetOrderReceiptFunction:
    Description: Get Order Lambda Function ARN
    Value:
      Fn::GetAtt:
      - GetOrderReceiptFunction
      - Arn
  GetOrderReceiptFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - GetOrderReceiptFunctionRole
      - Arn
